; Ввести текст из файла и вывести на экран только латинские буквы, вместо других
; символов выводить пробел. Выводить на экран (на экране 25 строк и 80столбцов)
; первую порцию, т.е. 25 строк, затем программа ждет нажатия Enter и распечатывает
; следующую порцию информации из файла. Текст выводится из файла, заданного в
; командной строке. Если файл не задан, программа должна запросить его.
;
; ПРОБЛЕМА1: в выводе последнего куска выводит мусор
; РЕШЕНИЕ1: в конце программы переносится курсор в файле хотя он и так переносился командой
;
;
;
;

code_seg segment

; проверка допустимости каждого обращения к именной ячейке памяти 
; с учетом значения текущего сегмента регистра 
; с помощью директивы ASSUME
assume cs:code_seg				; директива дающая информацию о сегменте кода для того, чтобы установить выполняемую программу
assume ds:code_seg,ss:code_seg 	; директива дающая информацию к каким ячейкам памяти можно адресовываться в данный момент

org 100h						; выделение 256 байт для префикса сегмента программы (PSP) 

start:   


	mov ah, 9h
	mov dx, offset msg
	int 21h
	;
	;




	mov dx, offset fname 		; адрес имени файла
	mov ah, 0Ah					; 0Ah - функция ввода строки
	int 21h 					; 

	xor bh, bh					; логическая операция "не-или", или "не равно"
	mov bl, fname[1]			; присваивание bl номер первой строки в файле
	mov fname[bx+2],0  			; 
	mov ax, 3d00h   			; функция 3d00h - открыть файл для чтения
	mov dx, offset fname+2 		; 
	int 21h  					; 
	
	mov Handler, ax 			; сохранение дескриптора
	jnc noerror1  				; 
	mov ah, 09h					; функция 09h - вывод строки символов
	mov dx, offset err1			; 
	int 21h  					; 
	int 20h 					; 

noerror1:  
	mov ah, 3Fh 				; функция 3Fh - читать файл через описатель
	mov bx, Handler 			; дескриптор (описатель)
	mov cx, 1999				; число списываемых байт
	mov dx, offset BufIn 		; адрес буфера для чтения
	int 21h 					; 
	
	jnc noerror2  				; 				*jnc - безусловный переход
	mov ah, 09h					; функция 09h - вывод строки символов
	mov dx, offset err1			; 
	int 21h						; 
	int 20h 					;

noerror2: 
	mov cx, ax					; 
	push ax 					; 
	mov ah, 02h					; функция 02h - вывод символа
	mov dx, 13					; 
	int 21h						; 
	mov ah, 02h					; функция 02h - вывод символа
	mov dx, 10					; 
	int 21h  					; 
	lea si, BufIn 				; 
	mov di, cx					; 

cikl:

	lodsb   					; загрузить искомый операнд в al
	
	cmp al, 40h					; елси аски код знака в al меньше или равен 40 
	jbe zamena 					; то прыжек на замену
	
	cmp al, 7Ah					; елси аски код знака в al больше 7А
	ja zamena  					; то прыжек на замену
	
	cmp al, 5Bh					; елси аски код знака в al равен 5B
	je zamena					; то прыжек на замену 
	
	cmp al, 5Ch					; елси аски код знака в al равен 5С
	je zamena 					; то прыжек на замену
	
	cmp al, 5Dh					; елси аски код знака в al равен 5D 
	je zamena					; то прыжек на замену
	
	cmp al, 5Eh					; елси аски код знака в al равен 5E
	je zamena					; то прыжек на замену
	
	cmp al, 5Fh					; елси аски код знака в al равен 5F
	je zamena 					; то прыжек на замену
	
	cmp al, 60h					; елси аски код знака в al равен 60
	je zamena					; то прыжек на замену

pechat:
	mov ah, 02h					; функция 02h - вывод символа
	mov dl, al					; 
	mov dh, 0					; 
	int 21h 					; 
	mov ah, 0					; 
	mov bl, 80					; 
	div bl						; 		
	test ah, ah					; 
	jnz nokrat 					; 
	mov ah, 02h					; функция 02h - вывод символа
	mov dx, 13					; 
	int 21h						; 
	mov ah, 02h					; функция 02h - вывод символа
	mov dx, 10					; 
	int 21h						; 

nokrat:
	loop cikl					;  
	jmp press					; безусловный переход на press

zamena: 
	mov ah, 02h					; функция 02h - вывод символа
	mov dx, 20h					; замена знака на пробел 
	int 21h 					; 
	loop cikl 					; переход обратно к циклу если значение реистра CX больше 0

press:   
	cmp di, 1998 				; если значение di выше чем 1998 
	jna jumpi					; то прыжек на jumpi (т.е. int 20h)
	
	mov ah, 0h					; как работают эти две строчки я не ебу но вроде нажно ожидать следующее нажатую клавишу
	int 16h						; тоже хз что етто вызывает прерывание
	
	cmp ax, 1C0Dh				; если значение регистра ax НЕ равно 1С0Dh 
	jne press   				; то прыжек на press
	
	mov ax, 4201h				; 
	mov bx, Handler 			; 
	mov cx, 0					; 
	mov dx, 1999				; 
	int 21h						;  
	jmp noerror1 				; 
	
jumpi:
	int 20h						; прерывание

; data

fname db 15,0,15 dup()			; 
BufIn DB 2048 dup (1) 			; 
err1 db 13,10,'error','$'		; 
Handler DW ? 					; 

msg db "enter file name$" 
  
code_seg ends					; конец сегмента

end start						; 
